CREATE TABLE biblioteca (
	ID_biblioteca VARCHAR(10) PRIMARY KEY,
	ID_usuario VARCHAR(11),
    ID_jogo VARCHAR(10),
    tempo_jogo BIGINT NOT NULL DEFAULT 0,
    completado BOOLEAN NOT NULL,
    reembolsavel BOOLEAN NOT NULL,
    instalado BOOLEAN NOT NULL,
			
	FOREIGN KEY (ID_usuario) REFERENCES usuarios(cpf),
	FOREIGN KEY (ID_jogo) REFERENCES jogos(ID_jogo)
);

SELECT * FROM biblioteca

DROP TABLE biblioteca
DROP TABLE compras

CREATE TABLE compras (
    ID_compra VARCHAR(10) PRIMARY KEY,
    ID_usuario VARCHAR(11),
    ID_jogo VARCHAR(10),
    data_compra DATE NOT NULL,
    valor NUMERIC(10,2) NOT NULL,
	avaliacao INT NOT NULL CHECK (avaliacao >= 0 AND avaliacao <= 100),
	comentario VARCHAR(50) NOT NULL,
    
    FOREIGN KEY (ID_usuario) REFERENCES usuarios(cpf),
    FOREIGN KEY (ID_jogo) REFERENCES jogos(ID_jogo)
);

DROP TABLE compras

--distribuição de compras
SELECT num_compras, COUNT(*) AS num_usuarios
FROM (
    SELECT ID_usuario, COUNT(*) AS num_compras
    FROM compras
    GROUP BY ID_usuario
) subquery
GROUP BY num_compras
ORDER BY num_compras;

-- quantos usuários não realizaram compras
SELECT COUNT(u.cpf) AS total_usuarios_sem_compra
FROM usuarios u
LEFT OUTER JOIN compras c ON u.cpf = c.ID_usuario
WHERE c.ID_compra IS NULL;

SELECT count(ID_usuario) 
FROM compras
GROUP BY ID_usuario

--quantos usuários realizaram compras
SELECT COUNT(*) AS total_usuarios_compras
FROM (
    SELECT ID_usuario
    FROM compras
    GROUP BY ID_usuario
) AS subquery;

SELECT * FROM jogos
SELECT * FROM compras
SELECT * FROM usuarios
DROP TABLE usuarios CASCADE

CREATE TABLE usuarios (
	cpf VARCHAR(11) PRIMARY KEY,
	nome VARCHAR(30) NOT NULL,
	sobrenome VARCHAR(50) NOT NULL,
	status VARCHAR(30) NOT NULL CHECK(status IN('online', 'offline')),
	email VARCHAR(255) NOT NULL,
	data_nascimento DATE NOT NULL,
	saldo NUMERIC (10, 2) NOT NULL,
	endereco TEXT NOT NULL
	
);

SELECT * FROM usuarios
WHERE nome = 'Brian' AND sobrenome = 'Tapia'

DROP TABLE usuarios


SELECT * FROM usuarios
SELECT * FROM jogos
SELECT * FROM compras
SELECT * FROM biblioteca

